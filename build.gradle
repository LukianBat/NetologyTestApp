import com.android.build.gradle.AppPlugin
import com.android.build.gradle.LibraryPlugin

buildscript {
    apply from: 'versions.gradle'
    apply from: "detekt/detekt.gradle"

    repositories {
        google()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:7.0.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        maven {
            url 'https://maven.fabric.io/public'
        }
        maven {
            url "https://jitpack.io"
        }
    }
}

subprojects {
    def directories = ["feature"]

    if (!directories.contains(project.name)) {

        def isAppOrFeature = project.name == "app" || project.path.contains("feature")

        if (project.name == "app") {
            apply plugin: AppPlugin
        } else {
            apply plugin: LibraryPlugin
        }

        apply plugin: 'kotlin-android'
        apply plugin: 'kotlin-kapt'

        sourceSets {
            main.java.srcDirs += ["src/main/kotlin"]
        }

        android {
            defaultConfig {
                compileSdkVersion 30
                buildToolsVersion "30.0.2"
                minSdkVersion 24
                targetSdkVersion 31
                versionCode 1
                versionName "1.0"
            }

            if (isAppOrFeature) {
                buildFeatures {
                    compose true
                }
                composeOptions {
                    kotlinCompilerExtensionVersion versions.compose_version
                }
            }

            compileOptions {
                sourceCompatibility JavaVersion.VERSION_1_8
                targetCompatibility JavaVersion.VERSION_1_8
            }

            kotlinOptions {
                jvmTarget = '1.8'
            }
        }

        dependencies {
            if (isAppOrFeature) {
                implementation "org.jetbrains.kotlin:kotlin-stdlib:$versions.kotlin"
                implementation "androidx.core:core-ktx:$versions.corektx"

                implementation project(":coreutils")
                implementation project(":coreui")
                implementation project(":architecture-mvvm")

                // compose
                implementation "androidx.compose.ui:ui:$versions.compose_version"
                implementation "androidx.compose.material:material:$versions.compose_version"
                implementation "androidx.compose.ui:ui-tooling-preview:$versions.compose_version"
                implementation "androidx.compose.runtime:runtime-livedata:$versions.compose_version"

                // dagger
                implementation "com.google.dagger:dagger:$versions.dagger"
                kapt "com.google.dagger:dagger-compiler:$versions.dagger"

                // jetpack
                implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle_version")
                implementation("androidx.navigation:navigation-fragment-ktx:2.3.5")
                implementation("androidx.navigation:navigation-ui-ktx:2.3.5")
                implementation("androidx.navigation:navigation-compose:2.4.0-alpha01")

                // app compat
                implementation "androidx.appcompat:appcompat:$versions.app_compat"

                // rxJava
                implementation "io.reactivex.rxjava2:rxkotlin:$versions.rxkotlin"
                implementation "io.reactivex.rxjava2:rxjava:$versions.rxjava"
                implementation "io.reactivex.rxjava2:rxandroid:$versions.rxandroid"

                testImplementation "junit:junit:$versions.junit"
                testImplementation "io.mockk:mockk:$versions.mockk"
                testImplementation "androidx.arch.core:core-testing:$versions.androidx_core_testing"
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
